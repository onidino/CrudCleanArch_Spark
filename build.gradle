allprojects {
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'jacoco'

    group 'com.cleancrud.spark'
    version '0.0.1-SNAPSHOT'

    sourceCompatibility = 1.11
    targetCompatibility = 1.11

    repositories {
        mavenCentral()
    }
}

configurations {
    childJars
}

subprojects {
    apply from: file('../gradle/tests.gradle')
    apply from: file('../gradle/dependencies.gradle')

    sourceSets {
        test {
            resources {
                srcDir 'resources'
            }
        }
    }
}

dependencies {
    subprojects.each {
        childJars project(it.path)
    }
}

// ------------------------------------------------------------------------------------------------

jacoco {
    toolVersion = '0.8.7'
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

tasks.create(name: "jacocoTestReport", type: JacocoReport, dependsOn: "test") {

    group = "Reporting"
    description = "Generate Jacoco coverage reports for the test build."

    reports {
        html.enabled = true
        xml.enabled = true
    }

    def excludes = [
            '**/*Test*.*',
            '**/actions/*.*',
            '**/core/*.*',
            '**/markers/*.*',
            '**/services/**/*.*',
            '**/toolwindow/*.*',
            '**/utils/*.*'
    ]
    def javaClasses = fileTree(dir: "${buildDir}/classes/java/main", excludes: excludes)
    classDirectories.from = files([javaClasses])

    sourceDirectories.from = files([
            "$project.projectDir/src/main/java",
            "$buildDir/generated/source/kapt/test"
    ])

    executionData.from = files("${project.buildDir}/jacoco/test.exec")
}

// ------------------------------------------------------------------------------------------------


